${@com.ijson.platform.generator.util.DataType}
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package_name}.entity.${tableName}">

  <resultMap id="result${tableName}" type="${package_name}.entity.${tableName}">
        <%
        if(table.columns.~size>0){
            for(col in table.columns){
                var colType = @com.ijson.platform.generator.util.DataType.getJdbcType(col.columnTypeName, col.precision);
                print("     <result property=\""+col.attrName+"\" column=\""+col.columnName+"\" jdbcType=\""+colType+"\"/>\n");
            }
        }
        %>
  </resultMap>


  <sql id="selectSql${tableName}">
      <%
      var i = 1;
      var count = table.columns.~size;
      if(count>0){
      print("    ");
          for(col in table.columns){
            var mm = ",";
            if(i==count){
              mm = "";
            }
           print(col.columnName);
           print(mm);
            i++;
          }
      }
      %>
  </sql>

  <sql id="variableSql${tableName}">
      <%
      var j = 1;
      var count2 = table.columns.~size;
      if(count2>0){
          print("    ");
          for(col in table.columns){
            var colType = @com.ijson.platform.generator.util.DataType.getJdbcType(col.columnTypeName, col.precision);
            var mm = ",";
            if(j==count2){
              mm = "";
            }
           print("#{");
           print(col.attrName);
           print(",jdbcType=");
           print(colType);
           print("}");
           print(mm);
           j++;
          }
       }
      %>
  </sql>
  <sql id="whereSql${tableName}">
    where 1=1
    <%
      var count3 = table.columns.~size;
      if(count3>0){
          for(col in table.columns){
           print("    ");
           var colType = @com.ijson.platform.generator.util.DataType.getJdbcType(col.columnTypeName, col.precision);
           print("<if test=\"");
           print(col.attrName);
           print(" != null and ");
           print(col.attrName);
           print(" != ''\"> and ");
           print(col.columnName);
           print("=#{");
           print(col.attrName);
           print("}</if>\n");
          }
       }
      %>
    </sql>


  <insert id="insert${tableName}" parameterType="${package_name}.entity.${tableName}">
       INSERT INTO ${table_name} ( <include refid="selectSql${tableName}"/>
       ) VALUES ( <include refid="variableSql${tableName}"/>)
   </insert>


  <update id="update${tableName}" parameterType="${package_name}.entity.${tableName}">
       UPDATE ${table_name}

       <trim prefix="SET" prefixOverrides=",">

      <%
        var count4 = table.columns.~size;
        var pktabelName = "";
        if(count4>0){
            for(col in table.columns){

             if(col.attrName==pkId){
                 pktabelName = col.columnName;
                 continue;
             }
             print("    ");
             var colType = @com.ijson.platform.generator.util.DataType.getJdbcType(col.columnTypeName, col.precision);
             print("<if test=\"");
             print(col.attrName);
             print(" != null and ");
             print(col.attrName);
             print(" != ''\"> , ");
             print(col.columnName);
             print("=#{");
             print(col.attrName);
             print("}</if>\n");
            }
         }

         print("    </trim>\n");
         print("    WHERE "+ pktabelName +" = #{"+table.pKColumn+"}");
        %>

   </update>
  <delete id="deleteById" parameterType="java.util.Map">
       DELETE FROM ${table_name} WHERE ${table.pKColumn} = #{${table.pKColumn}}
   </delete>
  <select id="selectById" resultMap="result${tableName}" parameterType="java.util.Map">
       select <include refid="selectSql${tableName}"/> from ${table_name} WHERE ${table.pKColumn} = #{${table.pKColumn}}
   </select>
  <select id="countByProperty" resultType="java.lang.Long"  parameterType="java.util.Map">
       SELECT count(*) FROM ${table_name} <include refid="whereSql${tableName}"/>
   </select>
  <select id="selectByProperty" resultMap="result${tableName}"  parameterType="java.util.Map">
       SELECT <include refid="selectSql${tableName}"/> FROM ${table_name} <include refid="whereSql${tableName}"/>
   </select>
</mapper>

